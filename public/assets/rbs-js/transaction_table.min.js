
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 Created on : Apr 28, 2023, 8:24:42 AM
 Author     : Sampath Perera
 */

var table = undefined;
$(document).ready(function () {
    (function ($) {
        table = $.fn.transactionTable = function (property) {
            const COLUMNS = property.columns;
            const AUTO_FOCUS = property.auto_focus;
            const transaction_table = this[0];
            const transaction_table_id = transaction_table.id;
            var ROW_ID = 0;


            this.clear = function () {
                $('#' + transaction_table_id + ' > tbody').empty();
            };

            this.appendRow = function (row) {
                var row_column = '<tr id="' + transaction_table_id + ROW_ID + '">';
                for (var i = 0; i < row.length; i++) {
                    var value = "";
                    if (row[i].value) value = row[i].value;

                    var class_name = "";
                    if (row[i].class) class_name = row[i].class;

                    var style = "";
                    if (row[i].style) style = row[i].style;

                    var event = "";
                    if (row[i].event) event = row[i].event;

                    var width = '*';
                    if (row[i].width) width = row[i].width + "px";

                    if (width == '*') width = "100%";

                    if (row[i].type == 'label') {
                        row_column += '<td style="max-width:' + width + ';"><label class="' + class_name + '" style="' + style + '" onclick="' + event + '">' + value + '</label></td>';
                    }

                    if (row[i].type == 'text') {
                        row_column += '<td style="max-width:' + width + ';"><input type="text" class="' + class_name + '" value="' + value + '" style="' + style + '" oninput="' + event + '"></td>';
                    }

                    if (row[i].type == 'button') {
                        row_column += '<td style="max-width:' + width + ';"><button type="button" class="' + class_name + '" style="' + style + '" onclick="' + event + '">' + value + '</button></td>';
                    }

                    if (row[i].type == 'select') {
                        var select_options = '';
                        for (var i2 = 0; i2 < value.length; i2++) {
                            select_options += '<option value="' + value[i2].value + '">' + value[i2].text + '</option>';
                        }
                        row_column += '<td  style="max-width:' + width + ';"><select class="' + class_name + '" style="' + style + '" onchange="' + event + '">' + select_options + '</select></td>';
                    }

                }
                row_column += '</tr>';
                this.append(row_column);



                $('#' + transaction_table_id + ROW_ID).keydown(function (e) {
                    if (e.keyCode == 13) {
                        transactionTableKeyEnterEvent(e, transaction_table_id);
                    }
                });

                $($('#' + transaction_table_id + ROW_ID)[0].cells[AUTO_FOCUS].childNodes[0]).focus();


                ROW_ID++;
            };

            this.addRow = function () {
                this.appendRow(COLUMNS);
            };

            this.getDataSource = function () {

                var dataCollection = [];
                var table = document.getElementById(transaction_table_id),
                    rows = table.getElementsByTagName('tr'),
                    i, j, cells, id;

                for (i = 0, j = rows.length; i < j; ++i) {
                    cells = rows[i].getElementsByTagName('td');
                    if (!cells.length) {
                        continue;
                    }


                    var data = [];
                    for (i2 = 0; i2 < cells.length; i2++) {

                        /*var data = {
                            "value": cells[i2].childNodes[0],
                        };*/
                        var type = cells[i2].childNodes[0].nodeName;
                        if (type == 'LABEL') {
                            data.push(cells[i2].childNodes[0].innerText);
                        } else if (type == 'INPUT') {
                            data.push(cells[i2].childNodes[0].value);
                        } else if (type == 'SELECT') {
                            data.push(cells[i2].childNodes[0].value);
                        } else if (type == 'BUTTON') {
                            data.push(cells[i2].childNodes[0].innerText);
                        }

                    }
                    dataCollection.push(data);



                }

                return dataCollection;
            };


            this.getDataSourceObject = function () {

                var objectCollection = [];
                var table = document.getElementById(transaction_table_id),
                    rows = table.getElementsByTagName('tr'),
                    i, j, cells, id;

                for (i = 0, j = rows.length; i < j; ++i) {
                    cells = rows[i].getElementsByTagName('td');
                    if (!cells.length) {
                        continue;
                    }


                    var data = [];
                    for (i2 = 0; i2 < cells.length; i2++) {


                        var object = $(cells[i2].childNodes[0]);
                        data.push(object);

                    }
                    objectCollection.push(data);



                }

                return objectCollection;
            }

            return this;
        }
    })(jQuery);

});


function transactionTableKeyEnterEvent(event, id) {

}

function removeRow(event) {
    var id = $($($(event).closest("tr").parent()).parent()).attr('id');
    var row_count = $('#' + id + ' tr').length - 1;
    if (row_count > 1) {
        $(event).closest("tr").remove();
    }
}







